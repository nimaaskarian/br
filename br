#!/bin/sh
CONFIG_DIR=${XDG_CONFIG_HOME:-${HOME}/.config}/br

source_config() {
  if [ -f "$CONFIG_DIR/brrc" ]; then
    . $CONFIG_DIR/brrc
  fi
}

edit_encrypted() {
  name=$(printf "%s" "$1" | sed 's+.gpg$++')
  TMP=$(mktemp --suffix "$SUFFIX")
  if [ -f "$name.gpg" ]; then
    gpg -d "$name.gpg" > "$TMP"
  fi
  before=$(cat "$TMP")
  $EDITOR_ "$TMP"
  after=$(cat "$TMP")
  if ! [ "$before" = "$after" ]; then
    gpg --symmetric --output "$name.gpg" "$TMP"
  fi
  rm "$TMP"
}

make_journal_path() {
  NAME=${1:-$($DATE)}
  echo "${VAULT}/${PREFIX}${NAME}${SUFFIX}"
}

make_vault() {
  VAULT=${1:-$VAULT}
  if [ "$notemode" = 1 ]; then
    VAULT=$VAULT/notes
  fi
  mkdir "$VAULT" 2> /dev/null
}

set_encrypted_editor() {
  EDITOR_=$EDITOR
  EDITOR=edit_encrypted
}

search_vault() {
  if name=$(fd -tf --base-directory "$1" | fzf); then
    FILE_PATH="$1/$name"
  fi
}

print() {
  printf "$*\n"
}

print_help() {
  print "Usage:"
  print "\tbr [OPTIONS] [VAULT_PATH]"
  print "Arguments:"
  print "\t [VAULT_PATH] Path to vault directory"
  print "Options:"
}

source_config "$@"
while getopts "hn:sSle" option; do
  case $option in 
    h) 
      print_help
      exit;;
    n) 
      notemode=1
      name=${OPTARG};;
    s)
      search_vault "$VAULT";;
    S)
      search_vault "$VAULT/notes";;
    l) 
      EDITOR=${PAGER:-less};;
    e) 
      ENCRYPTED=1;;
    \?) 
      echo "Error: Invalid option"
      exit 1;;
  esac
done
shift $((OPTIND - 1))
make_vault "$@"
FILE_PATH=${FILE_PATH:-$(make_journal_path "$name")}
if [ "$ENCRYPTED" = 1 ]; then
  set_encrypted_editor
fi

$EDITOR "$FILE_PATH"
