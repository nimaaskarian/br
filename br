#!/bin/sh
CONFIG_DIR=${XDG_CONFIG_HOME:-${HOME}/.config}/br

source_config() {
  if [ -f "$CONFIG_DIR/brrc" ]; then
    . $CONFIG_DIR/brrc
  fi
}

edit_encrypted() {
  name=$(printf "%s" "$1" | sed 's+.gpg$++')
  TMP=$(mktemp --suffix "$SUFFIX")
  if [ -f "$name.gpg" ]; then
    gpg -d "$name.gpg" > "$TMP"
  fi
  before=$(cat "$TMP")
  $EDITOR_ "$TMP"
  after=$(cat "$TMP")
  if ! [ "$before" = "$after" ]; then
    gpg --symmetric --output "$name.gpg" "$TMP"
  fi
  rm "$TMP"
}

make_journal_path() {
  format=${JOURNAL_FORMAT}
  if [ "$notemode" = 1 ]; then
    format=${NOTE_FORMAT}
  fi

  name=$(echo "$format" | sed "s/%n/$1/" | sed "s+%d+$($DATE)+")
  echo "${VAULT}/$name"
}

make_vault() {
  VAULT=${1:-$VAULT}
  if [ "$notemode" = 1 ]; then
    VAULT=$VAULT/notes
  fi
  mkdir "$VAULT" 2> /dev/null
}

set_encrypted_editor() {
  EDITOR_=$EDITOR
  EDITOR=edit_encrypted
}

search_vault() {
  name=$(fd -tf --base-directory "$1" $2 | fzf --tac) || exit 1
  if echo "$name" | grep '.gpg$'; then
    ENCRYPTED=1
  fi
  FILE_PATH="$1/$name"
}

print() {
  printf "$*\n"
}

print_help() {
  print "Usage:"
  print "\tbr [OPTIONS] [VAULT_PATH]"
  print
  print "Arguments:"
  print "\t [VAULT_PATH] Path to vault directory"
  print
  print "Options:"
  print "\t-n <NOTE_NAME>"
  print "\t\tEdit note inside VAULT/notes/<NOTE_NAME>"
  print "\t-s"
  print "\t\tSearch and open journals and notes inside current vault"
  print "\t-S"
  print "\t\tSearch and open only notes inside current vault"
  print "\t-l"
  print "\t\tUse PAGER (less) instead of EDITOR"
  print "\t-e"
  print "\t\tEdit journal/note as encrypted"
  print "\t-d"
  print "\t\tPrint the path of current vault"
}

source_config "$@"
while getopts "hn:sSledj" option; do
  case $option in 
    h) 
      print_help
      exit;;
    n) 
      notemode=1
      NAME=${OPTARG};;
    s)
      search_vault "$VAULT";;
    j)
      search_vault "$VAULT" "--max-depth 1";;
    S)
      search_vault "$VAULT/notes";;
    l) 
      EDITOR=${PAGER:-less};;
    e) 
      ENCRYPTED=1;;
    d) 
      echo "$VAULT"
      exit;;
    \?) 
      echo "Error: Invalid option"
      print_help
      exit 1;;
  esac
done
shift $((OPTIND - 1))
make_vault "$@"
FILE_PATH=${FILE_PATH:-$(make_journal_path "$NAME")}
if [ "$ENCRYPTED" = 1 ]; then
  set_encrypted_editor
fi

$EDITOR "$FILE_PATH"
